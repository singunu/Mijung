server {
    listen 80;
    listen [::]:80;

    server_name mijung.store www.mijung.store jenkins.mijung.store;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}

server {
    listen 80;
    listen 443 ssl;
    server_name j11d107.p.ssafy.io;

    return 301 $scheme://mijung.store$request_uri;

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}

server {
    listen 443 default_server ssl;
    http2 on;
    listen [::]:443 ssl http2;

    server_name mijung.store;

    ssl_certificate /etc/nginx/ssl/live/mijung.store/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/mijung.store/privkey.pem;

    location /api/v1/ {
        proxy_pass http://mijung_backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Nginx 응답 헤더 재구성 시 Authorization 헤더가 생략되지 않도록 설정.
        add_header Access-Control-Expose-Headers 'Authorization' always;
    }

    # location /fastapi/v1/ {
    #     proxy_pass http://mijung_fastapi:8000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     # Nginx 응답 헤더 재구성 시 Authorization 헤더가 생략되지 않도록 설정.
    #     add_header Access-Control-Expose-Headers 'Authorization' always;
    # }

    location / {
        root /usr/share/nginx/html;  # React 앱의 빌드 파일 위치
        index index.html;
        try_files $uri $uri/ /index.html;  # React Router를 위한 설정
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}

# jenkins https reverse proxy
server {
    listen 443 ssl http2;
    server_name jenkins.mijung.store;

    ssl_certificate /etc/nginx/ssl/live/mijung.store/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/mijung.store/privkey.pem;

    location / {
        proxy_pass http://jenkins:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Required for Jenkins websocket agents
        # proxy_set_header   Connection        $connection_upgrade;
        proxy_max_temp_file_size 0;

        # this is the maximum upload size
        client_max_body_size       10m;
        client_body_buffer_size    128k;

        # Additional settings
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffering off;

        # Required for HTTP CLI commands
        proxy_request_buffering    off;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}

# sub-domain for swagger
server {
    listen 443 ssl http2;
    server_name swagger.mijung.store;

    ssl_certificate /etc/nginx/ssl/live/swagger.mijung.store/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/swagger.mijung.store/privkey.pem;

    location / {
           proxy_pass http://mijung_backend:8080;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}
